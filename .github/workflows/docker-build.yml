name: Docker Build and Push

on:
  push:
    branches:
      - main
      - develop
      - env/v1/ci-cd/github-workflow-jib-docker-build-20251023
  workflow_dispatch:
    inputs:
      image_version:
        description: 'Docker image version (e.g., beta-20251023-0001)'
        required: true
        type: string

env:
  # 기본 이미지 버전 (자동 생성: beta-YYYYMMDD-HHMM)
  DEFAULT_IMAGE_VERSION: beta-${{ github.run_number }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # GitHub Environment를 사용하는 경우 (권장)
    # environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Determine Image Version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "IMAGE_VERSION=${{ inputs.image_version }}" >> $GITHUB_ENV
          else
            # 자동 빌드 시 날짜 기반 버전 생성
            IMAGE_VERSION="beta-$(date +'%Y%m%d-%H%M')"
            echo "IMAGE_VERSION=${IMAGE_VERSION}" >> $GITHUB_ENV
          fi
          echo "Selected image version: ${IMAGE_VERSION}"

      - name: Build Project
        run: |
          ./gradlew :dailyfeed-member:build -x test --info

      - name: Build and Push Docker Image with Jib
        run: |
          ./gradlew :dailyfeed-member:jib --info
        env:
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Summary
        run: |
          echo "### Docker Build Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: alpha300uk/dailyfeed-member-svc" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ env.IMAGE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

      - name: Package Helm Chart
        run: |
          cd dailyfeed-app-helm/base-chart/dailyfeed-backend-chart
          helm package .
          echo "Helm chart packaged successfully"

      - name: Copy Helm Package to Member Directory
        run: |
          cp dailyfeed-app-helm/base-chart/dailyfeed-backend-chart/dailyfeed-backend-chart-*.tgz \
             dailyfeed-app-helm/member/
          echo "Helm package copied to member directory"

      - name: Update Member values.yaml with Image Tag
        run: |
          sed -i "s/^imageTag:.*/imageTag: ${{ env.IMAGE_VERSION }}/" \
            dailyfeed-app-helm/member/values.yaml
          echo "Updated imageTag to ${{ env.IMAGE_VERSION }} in values.yaml"

      - name: Update install-helm-local.sh Script
        run: |
          cat > dailyfeed-app-helm/member/install-helm-local.sh << 'EOF'
          #!/bin/bash

          # Usage: ./install-helm-local.sh <IMAGE_TAG>
          # Example: ./install-helm-local.sh beta-20251023-1234

          if [ -z "$1" ]; then
            echo "Error: IMAGE_TAG is required"
            echo "Usage: $0 <IMAGE_TAG>"
            echo "Example: $0 beta-20251023-1234"
            exit 1
          fi

          IMAGE_TAG=$1

          helm install -n dailyfeed dailyfeed-member \
            dailyfeed-backend-chart-0.1.0.tgz \
            -f values-local-member.yaml \
            --set imageTag=${IMAGE_TAG}
          EOF
          chmod +x dailyfeed-app-helm/member/install-helm-local.sh
          echo "Updated install-helm-local.sh script"

      - name: Commit and Push Helm Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add dailyfeed-app-helm/member/
          git commit -m "chore: update helm chart and config for image version ${{ env.IMAGE_VERSION }}" || echo "No changes to commit"
          git push